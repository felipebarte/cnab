# Cursor Rules - Gerenciamento de Servidor Ativo

## üö´ REGRA CR√çTICA: NUNCA CRIAR NOVOS SERVIDORES

### Verifica√ß√£o Obrigat√≥ria Antes de Qualquer Comando de Servidor

**SEMPRE** execute estas verifica√ß√µes antes de sugerir qualquer comando de servidor:

1. **Verificar processos ativos:**
   ```bash
   ps aux | grep -E "(node|npm|yarn|bun|pnpm|vite|next|react-scripts)" | grep -v grep
   ```

2. **Verificar portas em uso:**
   ```bash
   netstat -tlnp | grep -E ":(3000|3001|5173|5174|8080|8000|4000)"
   ```

3. **Verificar servidores de desenvolvimento:**
   ```bash
   lsof -i :3000 -i :5173 -i :8080 -i :4000
   ```

### Comportamento Obrigat√≥rio

- ‚ùå **NUNCA** execute `npm start`, `npm run dev`, `yarn dev`, `bun dev`, ou similar se um servidor j√° estiver rodando
- ‚ùå **NUNCA** sugira iniciar um novo servidor sem verificar processos ativos
- ‚úÖ **SEMPRE** informe ao usu√°rio sobre servidores ativos encontrados
- ‚úÖ **SEMPRE** pergunte se o usu√°rio deseja parar o servidor atual antes de iniciar um novo
- ‚úÖ **SEMPRE** ofere√ßa comandos para parar servidores ativos (kill, Ctrl+C, etc.)

### Comandos de Verifica√ß√£o Recomendados

```bash
# Verificar todos os processos Node.js
ps aux | grep node

# Verificar portas espec√≠ficas do projeto
lsof -i :5173  # Vite
lsof -i :3000  # React/Next.js

# Matar processo espec√≠fico se necess√°rio
kill -9 <PID>
```

### Exce√ß√µes Permitidas

- Iniciar servidor apenas se nenhum processo ativo for encontrado
- Reiniciar servidor ap√≥s confirma√ß√£o expl√≠cita do usu√°rio para parar o atual
- Usar portas diferentes apenas com justificativa t√©cnica v√°lida

### Mensagem Padr√£o ao Detectar Servidor Ativo

"‚ö†Ô∏è **SERVIDOR ATIVO DETECTADO!** 
Encontrei um servidor j√° rodando neste projeto. Para evitar conflitos:
1. Primeiro pare o servidor atual (Ctrl+C ou kill)
2. Depois posso ajudar a iniciar um novo se necess√°rio
3. Ou podemos trabalhar com o servidor atual

Deseja que eu ajude a gerenciar o servidor ativo?" 