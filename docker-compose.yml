version: '3.8'

services:
  # MySQL Database Service
  database:
    image: mysql:8.0
    container_name: cnab-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: cnab_root_2024
      MYSQL_DATABASE: cnab_database
      MYSQL_USER: cnab_user
      MYSQL_PASSWORD: cnab_pass_2024
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - cnab-mysql-data:/var/lib/mysql
      - cnab-mysql-logs:/var/log/mysql
      - ./scripts/mysql-init:/docker-entrypoint-initdb.d
    networks:
      - cnab-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "cnab_user", "-pcnab_pass_2024"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M --max-connections=200

  # API Service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: cnab-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - ./api/.env
    environment:
      - NODE_ENV=development
      - PORT=8080
      - LOG_LEVEL=info
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
      # Database Configuration
      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=cnab_database
      - DB_USER=cnab_user
      - DB_PASSWORD=cnab_pass_2024
      - DB_CHARSET=utf8mb4
      - DB_TIMEZONE=America/Sao_Paulo
      - DB_POOL_MIN=5
      - DB_POOL_MAX=50
      - DB_POOL_ACQUIRE=30000
      - DB_POOL_IDLE=10000
    volumes:
      - cnab-uploads:/app/uploads
      - cnab-logs:/app/logs
    networks:
      - cnab-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 8080, path: '/health', timeout: 2000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) { process.exit(0); } else { process.exit(1); } }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cnab-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - cnab-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Volumes
volumes:
  cnab-mysql-data:
    driver: local
  cnab-mysql-logs:
    driver: local
  cnab-uploads:
    driver: local
  cnab-logs:
    driver: local

# Networks
networks:
  cnab-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 